from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

documents = [
    "Natural language processing (NLP) is a field of study in artificial intelligence.",
    "NLP techniques are used in various applications like machine translation and sentiment analysis.",
    "The development of NLP tools and libraries has made text analysis easier."
]

query = "What is natural language processing?"

def retrieve_documents_tfidf(documents, query):
    vectorizer = TfidfVectorizer()

    tfidf_matrix = vectorizer.fit_transform(documents + [query])

    similarity_scores = cosine_similarity(tfidf_matrix[-1], tfidf_matrix[:-1])

    ranked_documents = sorted(enumerate(similarity_scores[0]), key=lambda x: x[1], reverse=True)

    return ranked_documents
results = retrieve_documents_tfidf(documents, query)

print("Query:", query)
print("\nRanked Documents:")
for idx, score in results:
    print(f"Document {idx + 1}: {documents[idx]} (Similarity Score: {score:.4f})")
